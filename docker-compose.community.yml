# KSE Memory SDK - Community Edition Docker Compose
# Free, self-hosted stack with no API keys required

version: '3.8'

services:
  # ChromaDB - Free vector database
  chromadb:
    image: chromadb/chroma:latest
    ports:
      - "8000:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL - Free concept store
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=kse_concepts
      - POSTGRES_USER=kse_user
      - POSTGRES_PASSWORD=kse_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kse_user -d kse_concepts"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Neo4j Community - Free graph database
  neo4j:
    image: neo4j:5-community
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    environment:
      - NEO4J_AUTH=neo4j/kse_password
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "kse_password", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis - Free caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # KSE Memory Demo Application
  kse-demo:
    build:
      context: .
      dockerfile: Dockerfile.community
    ports:
      - "8080:8080"
    depends_on:
      chromadb:
        condition: service_healthy
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Vector Store (ChromaDB)
      - CHROMADB_HOST=chromadb
      - CHROMADB_PORT=8000
      
      # Graph Store (Neo4j)
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=kse_password
      
      # Concept Store (PostgreSQL)
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=kse_concepts
      - POSTGRES_USER=kse_user
      - POSTGRES_PASSWORD=kse_password
      
      # Cache (Redis)
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      
      # KSE Settings
      - KSE_DEBUG=false
      - KSE_LOG_LEVEL=INFO
    volumes:
      - ./examples:/app/examples:ro
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  chromadb_data:
    driver: local
  postgres_data:
    driver: local
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: kse-community